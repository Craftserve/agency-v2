---
import { Icon } from "astro-icon/components";
import Image from "astro/components/Image.astro";
import star from "../assets/star.svg";
import { getLangFromUrl, useTranslations } from "../i18n/utils";

type IconItem = {
    type: "icon";
    iconName: string;
    text: string;
};

type ImageItem = {
    type: "image";
    iconName: ImageMetadata;
    text: string;
};

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const contentData: (IconItem | ImageItem)[] = [
    {
        type: "icon",
        iconName: "tabler:infinity",
        text: t("iconsSection.perfect"),
    },
    {
        type: "icon",
        iconName: "tabler:clock",
        text: t("iconsSection.time"),
    },
    {
        type: "icon",
        iconName: "tabler:infinity",
        text: t("iconsSection.perfect"),
    },
    {
        type: "icon",
        iconName: "tabler:clock",
        text: t("iconsSection.perfect"),
    },
    {
        type: "image",
        iconName: star,
        text: t("iconsSection.perfect"),
    },
    {
        type: "icon",
        iconName: "tabler:clock",
        text: t("iconsSection.time"),
    },
    {
        type: "icon",
        iconName: "tabler:infinity",
        text: t("iconsSection.perfect"),
    },
    {
        type: "icon",
        iconName: "tabler:clock",
        text: t("iconsSection.time"),
    },
];
---

<div class="container">
    <div class="item-wrapper">
        {
            contentData.map((item, index) =>
                index < 4 ? (
                    <div class="item">
                        <Icon name={item.iconName} class="icon" />
                        {index === 0 ? <span class="styledText">{item.text}</span> : <span>{item.text}</span>}
                    </div>
                ) : (
                    ""
                )
            )
        }
    </div>
    <div class="item-wrapper">
        {
            contentData.map((item, index) =>
                index >= 4 ? (
                    <div class="item">
                        {item.type === "image" ? (
                            <Image src={item.iconName} class="icon" alt="star icon" />
                        ) : (
                            <Icon name={item.iconName} class="icon" />
                        )}
                        <span>{item.text}</span>
                    </div>
                ) : (
                    ""
                )
            )
        }
    </div>
</div>

<style>
    .container {
        display: flex;
        flex-direction: column;
        width: 100%;
        margin: 20px 0px;
        max-width: 1000px;
        height: 100%;
        gap: 30px;
        padding: 20px;
        z-index: 1;
    }

    .item-wrapper {
        display: flex;
        flex-direction: row;
        justify-content: center;
        align-items: center;
        gap: 20px;
        width: 100%;
        height: 50%;
    }

    .item {
        height: 100%;
        width: 25%;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        gap: 10px;
        font-size: 20px;
        font-weight: bold;

        span {
            text-align: center;
        }
    }

    .icon {
        height: 5rem;
        width: 5rem;
    }

    .styledText {
        text-align: center;
        position: relative;
    }

    .styledText::before {
        content: "";
        position: absolute;
        top: 22px;
        left: 35px;
        height: 30px;
        width: 155px;
        background-color: #6809ee1a;
        transform: rotate(-7deg);
    }

    @media only screen and (max-width: 768px) {
        .container {
            flex-direction: row;
            gap: 5px;
            padding: 20px 0px;
        }

        .item-wrapper {
            flex-direction: column;
            height: 100%;
            width: 50%;
        }

        .item {
            height: 25%;
            width: 100%;
        }

        .styledText::before {
            top: 0px;
            left: 90px;
        }

        .icon {
            height: 4rem;
            width: 4rem;
        }
    }

    @media only screen and (max-width: 493px) {
        .styledText::before {
            top: 22px;
            left: 45px;
        }
    }
</style>
