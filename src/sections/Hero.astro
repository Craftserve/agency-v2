---
import { Image } from "astro:assets";
import starsIconGroup from "../../public/assets/starsIconGroup.svg";
import Link from "../components/Link.astro";
import { getLangFromUrl, getRoutes, useTranslations } from "../i18n/utils";
import { Icon } from 'astro-icon/components';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const routes = getRoutes(Astro.url);

---

<div class="wrapper">
    <div class="infoContainer">
        <span class="title">
            
        </span>
        <div class="buttonsContainer">
            <Link variant="primary" href={routes[0].url}>
                <Icon name="uil:phone" width={30} height={30} />
                {t("joinus")}
            </Link>
            <Link variant="outlined" href={routes[1].url} >
                <Icon name="uil:info-circle" width={30} height={30} />
                <div style="display: flex; flex-direction: column;">
                    <span style="font-weight: 400; font-size: 10pt;">{t("learnmore")}</span>
                    <span style="font-weight: 700">{t("aboutus")}</span>
                </div>
            </Link>
        </div>
    </div>
    <Image class="imageContainer" src={starsIconGroup} alt="stars"/>
</div>

<script>
    import { getLangFromUrl, useTranslations } from "../i18n/utils";

    const lang = getLangFromUrl(new URL(window.location.href));
    const t = useTranslations(lang);

    const headerText = t("header").split("");
    const headerComponent = document.getElementsByClassName("title")[0];
    let textComponent = headerComponent;

    let time = 0;
    let multi = 0;

    if(headerComponent){
        headerText.forEach((letter, index) => {
            setTimeout(() => {
                if(letter === "|"){
                    textComponent.innerHTML += "<br />";
                    console.log(textComponent);
                    return;
                }

                if(letter === "i" && headerText[index-1] === " "){
                    const newSpan = document.createElement("span");
                    newSpan.style.color = "#6809EE";


                    headerComponent.appendChild(newSpan);
                    textComponent = newSpan;
                }

                textComponent.innerHTML += letter;
            }, time)

            if(letter === ","){
                time += 1000;
                multi = 150;
                return;
            }

            time += multi;
        })
    }
    
</script>

<style>
    .wrapper{
        display: flex;
        flex-direction: row;
        gap: 50px;
        position: relative;
        padding: 20px;
        z-index: 1;
        width: 90%;
        margin-bottom: 30px;
    }

    .infoContainer{
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        gap: 30px;
        animation: fadeFromLeft ease-out 1s;
    }

    .buttonsContainer{
        display: flex;
        flex-direction: row;
        gap: 5px;
    }

    .title{
        font-size: 50pt;
        font-weight: 700;
        letter-spacing: -2px;
        min-height: 230px;
    }

    .imageContainer{
        position: absolute;
        top: 50%;
        right: 0;
        transform: translateY(-50%);
        width: 400px;
        height: 300px;
        z-index: -1;
        animation: fadeFromRight ease-out 1s;
    }

    @keyframes fadeFromLeft{
        from{
            transform: translateX(-200px);
            opacity: 0;
        }
        to{
            transform: translateX(0px);
            opacity: 1;
        }
    }

    @keyframes fadeFromRight{
        from{
            transform: translateX(300px) translateY(-50%);
            opacity: 0;
        }
        to{
            transform: translateX(0px) translateY(-50%);
            opacity: 1;
        }
    }

    @media only screen and (max-width: 1000px){
        .imageContainer{
            opacity: 0.5;
            animation: fadeFromRightMobile ease-out 1s;
        }

        .title{
            font-size: 35pt;
        }

        .buttonsContainer{
            flex-direction: column;
        }
    }

    @keyframes fadeFromRightMobile{
        from{
            transform: translateX(300px) translateY(-50%);
            opacity: 0;
        }
        to{
            transform: translateX(0px) translateY(-50%);
            opacity: 0.5;
        }
    }

</style>