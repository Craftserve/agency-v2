---
interface Props {
    id: string;
    fontSize?: string;
    variant: "primary" | "secondary" | "outlined";
    type: "button" | "submit" | "reset" | null | undefined,
}

const { id, variant, fontSize = "1em", type="button" } = Astro.props as Props;

const variantClassMap: Record<string, string> = {
    primary: "dark",
    secondary: "light",
};

const buttonClass = variantClassMap[variant] ?? "outlined";
---

<button type={type} id={id} class={`button ${buttonClass}`}>
    <slot />
</button>

<style define:vars={{ fontSize }}>
    .dark {
        color: var(--light);
        background-color: var(--dark);
        box-shadow: 0px 5px 5px rgba(12, 12, 12, 0.33);
    }

    .light {
        color: var(--dark);
        background-color: var(--secondary);
    }

    .outlined {
        color: var(--primary);
        background-color: transparent;
        border: 2px solid var(--primary);
    }

    .button {
        border-radius: 10px;
        border: none;
        padding: 15px 30px;
        cursor: pointer;
        font-weight: 700;
        width: 100%;

        font-size: var(--fontSize);
        font-family: var(--font-ubuntu);
    }
</style>
